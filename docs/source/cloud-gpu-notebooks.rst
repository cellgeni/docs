GPU Notebooks on the Cloud
===========

.. note::
    **Only members of the Cellular Genetics Programme and their collaborators are eligible for access**.

Cloud GPU Notebooks is a new service provided by CellGen IT team. The service utilizes Cloud resources and is paid for by the `Cellular Genetics Programme <https://www.sanger.ac.uk/programme/cellular-genetics/>`_. We intend to provide this service in three tiers.

Tier 1
------
`Free version of Google Colab <https://colab.research.google.com/>`_ has only the K80 GPU type, up to 12GB RAM and 12 hours of execution time. 

Tier 3
------
Bespoke notebooks could have all available GPU types (T4, V100, P100, and A100), up to 624GB RAM and longer execution times. In addition up to 8 GPUs can be attached to an instance.

See `official list <https://cloud.google.com/compute/docs/gpus#gpus-list>`_ for specs.

(Tier 3) Accessing your instance
^^^^^^^^

You’ll receive a link similar to: https://xxx.yyy..notebooks.googleusercontent.com/ you need to make sure that your user@sanger.ac.uk Sanger Google Account is used to login. We suggest using Incognito/Private mode in your web browser to access the link so it does not get mixed with your Personal Google Account.


Request a notebook
-------

Please fill in `this form <https://forms.gle/NLdvCHnzjgZXcXPD7>`_ and we will action on your request and be in touch with you the same or the next day.

Installed software
--------

The cloud notebook probably won't have the same setup as you've got on your Jupyter. Some packages are installed by default (python, cuda, pytorch, tensorflow). The best thing is to have a list of all your required packages so it's easier to install them all in a new compute instance. 
Should you require more packages, you can install them yourself. It’s a good idea to add install steps or scripts to your notebooks. 

- If you choose to install packages using a script, remember to activate the conda environment before running the script or inside the script itself.
- If you choose to install using a notebook, remember to use cell magic like this can help you install packages in from your notebooks:

.. code-block:: bash

    pip install XXX 
    conda install YYY

Alternatively, create environments from dependency files like the ones generated by

.. code-block:: bash

    conda env export > environment.yml

and then import them on the cloud env

.. code-block:: bash

    conda env create -f environment.yml

Getting data to the cloud
-------------------------

Notebooks on the cloud can’t access the farm so you need to pivot the data to get it to the cloud. 

Use `rclone <https://rclone.org/drive/>`_ to copy data from the farm to Google Drive and then pull that data from Google Drive to your cloud compute environment. 

You can also use `rclone mount <https://rclone.org/commands/rclone_mount/>`_ to make Google Drive show up in your path. Quick guide for setting up rclone `here <https://gitlab.internal.sanger.ac.uk/mp33/random-guides/-/blob/master/rclone.md>`_. 


Shutting down your instance
---------------------------

It’s important not to keep your notebook idle. If you’re done for the day and you’re not going to be using it anymore, please shut it down using (it will take a couple minutes):

.. code-block:: bash

    sudo shutdown -h now

Or let us know you’ve finished and we’ll shut it down for you.
